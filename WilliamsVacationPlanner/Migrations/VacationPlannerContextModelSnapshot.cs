// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WilliamsVacationPlanner.Models;

namespace WilliamsVacationPlanner.Migrations
{
    [DbContext(typeof(VacationPlannerContext))]
    partial class VacationPlannerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WilliamsVacationPlanner.Models.Accommodation", b =>
                {
                    b.Property<int>("AccommodationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccommodationId");

                    b.ToTable("Accommodations");

                    b.HasData(
                        new
                        {
                            AccommodationId = 1,
                            Email = "holidayinn@gmail.com",
                            Name = "Holiday Inn Express",
                            Phone = "770-123-4567"
                        },
                        new
                        {
                            AccommodationId = 2,
                            Email = "hogwarts@gmail.com",
                            Name = "Hogwarts",
                            Phone = "523-324-2342"
                        },
                        new
                        {
                            AccommodationId = 3,
                            Email = "bill@gmail.com",
                            Name = "Bill's House",
                            Phone = "451-532-5678"
                        });
                });

            modelBuilder.Entity("WilliamsVacationPlanner.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            Name = "Hiking"
                        },
                        new
                        {
                            ActivityId = 2,
                            Name = "Bowling"
                        },
                        new
                        {
                            ActivityId = 3,
                            Name = "Gambling"
                        },
                        new
                        {
                            ActivityId = 4,
                            Name = "Drinking"
                        });
                });

            modelBuilder.Entity("WilliamsVacationPlanner.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Name = "Disney Land"
                        },
                        new
                        {
                            LocationId = 2,
                            Name = "Lego Land"
                        });
                });

            modelBuilder.Entity("WilliamsVacationPlanner.Models.Vacation", b =>
                {
                    b.Property<int>("VacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccommodationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VacationId");

                    b.HasIndex("AccommodationId");

                    b.HasIndex("LocationId");

                    b.ToTable("Vacations");

                    b.HasData(
                        new
                        {
                            VacationId = 1,
                            AccommodationId = 2,
                            EndDate = new DateTime(2021, 4, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LocationId = 1,
                            StartDate = new DateTime(2021, 4, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            VacationId = 2,
                            AccommodationId = 3,
                            EndDate = new DateTime(2021, 4, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            LocationId = 2,
                            StartDate = new DateTime(2021, 4, 13, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("WilliamsVacationPlanner.Models.VacationActivity", b =>
                {
                    b.Property<int>("VacationId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.HasKey("VacationId", "ActivityId");

                    b.HasIndex("ActivityId");

                    b.ToTable("VacationActivites");

                    b.HasData(
                        new
                        {
                            VacationId = 1,
                            ActivityId = 3
                        },
                        new
                        {
                            VacationId = 1,
                            ActivityId = 1
                        },
                        new
                        {
                            VacationId = 2,
                            ActivityId = 2
                        },
                        new
                        {
                            VacationId = 2,
                            ActivityId = 4
                        },
                        new
                        {
                            VacationId = 2,
                            ActivityId = 1
                        });
                });

            modelBuilder.Entity("WilliamsVacationPlanner.Models.Vacation", b =>
                {
                    b.HasOne("WilliamsVacationPlanner.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WilliamsVacationPlanner.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Accommodation");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WilliamsVacationPlanner.Models.VacationActivity", b =>
                {
                    b.HasOne("WilliamsVacationPlanner.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WilliamsVacationPlanner.Models.Vacation", "Vacation")
                        .WithMany("Activities")
                        .HasForeignKey("VacationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Vacation");
                });

            modelBuilder.Entity("WilliamsVacationPlanner.Models.Vacation", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
